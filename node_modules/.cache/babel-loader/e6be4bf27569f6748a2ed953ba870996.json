{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kido3/Desktop/Kido/kido-book-trial/src/components/Backend/card/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../../context/Auth';\n\nfunction Card(props) {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [showModal, setShowModal] = useState(false);\n  const {\n    teacherName,\n    scheduleDateId,\n    groupId,\n    childAgeGroup\n  } = props;\n  const [cardData, setCardData] = useState(\"\"); // to handle details of card\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false); // to split members list string into array\n\n  const memberArr = teacherName.split(\",\");\n  const cardNames = React.useRef();\n  const teamDetails = React.useRef();\n  const userId = currentUser.uid; // to Hide past date\n  // var today = new Date();\n  // var month,\n  //   day = null;\n  // if (today.getMonth() < 10 || today.getDate() < 10) {\n  //   month = \"0\" + (today.getMonth() + 1);\n  //   day = \"0\" + today.getDate();\n  // }\n  // var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n  useEffect(() => {\n    setIsCardAdded(false);\n    setIsCardDelete(false);\n    setIsCardEdited(false);\n    getCardData();\n  }, [isCardAdded, isCardDelete, isCardEdited]);\n\n  const getCardData = () => {\n    Axios.get(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card.json`).then(response => {\n      setCardData(response.data);\n    }).catch(error => console.log(error));\n  }; //  to Add and Edit cardData in DB\n\n\n  const handleAddCardData = e => {\n    //   check if all input is taken\n    if (cardNames.current.value.length === 0 || teamDetails.current.value.length === 0) {\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios.put(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card/${cardId}.json`, {\n          cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n          team: team.length === 0 ? teamDetail : team\n        }).then(response => {\n          alert(\"card edited succesfully\");\n          setIsCardEdited(true);\n        }).catch(error => console.log(\"Error in editDetails\" + error));\n      } //  if user wants to add a new card\n      else {\n          Axios.post(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card.json`, {\n            cardTitle: cardTitle,\n            team: team\n          }).then(response => {\n            alert(\"card added succesfully\");\n            setIsCardAdded(true);\n          }).catch(error => console.log(\"Error\" + error));\n        }\n\n      setShowModal(false);\n      setEditDetails(false);\n      setCardTitle(\"\");\n      setTeam([]);\n    }\n  }; // on click of card this function shows details\n\n\n  const onCardClick = (cardName, teamDetails, cardId, e) => {\n    setShowDetails(true);\n    setCardName(cardName);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  }; // handles edit button click\n\n\n  const handleEdit = e => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  }; // handles archive on card archive click\n\n\n  const handleArchive = e => {\n    Axios.delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${groupId}/column/${scheduleDateId}/card/${cardId}.json`).then(response => {\n      alert(\"card archived succesfully\");\n      setIsCardDelete(true);\n    }).catch(error => console.log(\"Error\" + error));\n    setShowDetails(false);\n  }; //To display multiple team member selected\n\n\n  const onSelectChange = e => {\n    const values = [...e.target.selectedOptions].map(opt => opt.value);\n    setTeam(values);\n  };\n\n  const modalCloseHandler = () => {\n    setShowModal(false);\n    setEditDetails(false);\n  };\n\n  const showmodalCloseHandler = () => {\n    setShowDetails(false);\n  }; //modal of Add and Edit Card\n\n\n  let modalContent = showModal ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editDetails ? 'Edit Time Slot' : 'Add Time Slot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 11\n          }, this), formIncompleteError ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Kindly complete the form before adding Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 34\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"timeslot\",\n              children: \"Enter a Time slot for your Schedule date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              defaultValue: editDetails ? cardName : \"\",\n              placeholder: \"e.g. Add a new icon\",\n              ref: cardNames,\n              onChange: e => setCardTitle(e.target.value),\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"teacherlist\",\n              children: \"Choose Teaches Name for this time slot(select multiple,if needed):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"teacherlist\",\n              name: \"teacherlist\",\n              class: \"form-control\",\n              defaultValue: editDetails ? teamDetail : \"\",\n              multiple: true,\n              ref: teamDetails,\n              onChange: onSelectChange,\n              children: memberArr.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item,\n                children: item\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 63\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: formComplete,\n            className: \"btn btn-info btn-sm\",\n            id: \"CreateCard\",\n            onClick: handleAddCardData,\n            children: editDetails ? 'Edit Time Slot' : 'Add Time Slot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }, this)\n  }, void 0, false) : null; //modal of show card details\n\n  let showmodalContent = showDetails ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.ShowCardDetails,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.ShowcardHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: cardName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.editAndArcbtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"editBtn\",\n            className: style.EditButton,\n            onClick: handleEdit,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"archiveBtn\",\n            className: style.ArchiveButton,\n            onClick: handleArchive,\n            children: \"Archive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"in \", childAgeGroup]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HorizontalLine\",\n        children: /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hrline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: teamDetail !== undefined && teamDetail.map(i => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.cardMembers,\n          children: i.charAt(0)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.CardData,\n      children: [cardData ? Object.entries(cardData).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.CardInfo,\n          id: item[0],\n          value: item[1].cardTitle,\n          onClick: e => onCardClick(item[1].cardTitle, item[1].team, item[0], e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.CardHeader,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.CardName,\n              children: item[1].cardTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.CardIcon,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-list\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item[1].team !== undefined ? item[1].team.map(i => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: style.cardMembers,\n                children: i.charAt(0)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 25\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, item[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"small\", {\n        className: style.NotaskAdd,\n        children: \"No Time Slots Added\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-sm\",\n          onClick: () => setShowModal(true),\n          children: \"Add Time Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      content: modalContent,\n      close: modalCloseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), showDetails && /*#__PURE__*/_jsxDEV(Modal, {\n      content: showmodalContent,\n      close: showmodalCloseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"yvxl0efZSs4tzD2qr6FDAL8BO2w=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/kido3/Desktop/Kido/kido-book-trial/src/components/Backend/card/Card.js"],"names":["React","useState","useEffect","useContext","style","Modal","Axios","AuthContext","Card","props","currentUser","showModal","setShowModal","teacherName","scheduleDateId","groupId","childAgeGroup","cardData","setCardData","showDetails","setShowDetails","cardName","setCardName","teamDetail","setTeamDetails","editDetails","setEditDetails","cardId","setCardId","isCardAdded","setIsCardAdded","isCardDelete","setIsCardDelete","isCardEdited","setIsCardEdited","cardTitle","setCardTitle","team","setTeam","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","memberArr","split","cardNames","useRef","teamDetails","userId","uid","getCardData","get","then","response","data","catch","error","console","log","handleAddCardData","e","current","value","length","put","alert","post","onCardClick","handleEdit","handleArchive","delete","onSelectChange","values","target","selectedOptions","map","opt","modalCloseHandler","showmodalCloseHandler","modalContent","color","item","showmodalContent","ShowCardDetails","ShowcardHeader","editAndArcbtn","EditButton","ArchiveButton","undefined","i","cardMembers","charAt","CardData","Object","entries","CardInfo","CardHeader","CardName","CardIcon","NotaskAdd"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../../context/Auth';\n\nfunction Card(props) {\n  const { currentUser } = useContext(AuthContext);\n\n  const [showModal, setShowModal] = useState(false);\n  const { teacherName, scheduleDateId, groupId, childAgeGroup} = props;\n  const [cardData, setCardData] = useState(\"\");\n\n  // to handle details of card\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  // to split members list string into array\n  const memberArr = teacherName.split(\",\");\n\n  const cardNames = React.useRef();\n  const teamDetails = React.useRef();\n\n  const userId = currentUser.uid;\n\n    // to Hide past date\n    // var today = new Date();\n    // var month,\n    //   day = null;\n    // if (today.getMonth() < 10 || today.getDate() < 10) {\n    //   month = \"0\" + (today.getMonth() + 1);\n    //   day = \"0\" + today.getDate();\n    // }\n    // var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n    useEffect(() => {\n      setIsCardAdded(false);\n      setIsCardDelete(false);\n      setIsCardEdited(false);\n      getCardData();\n    }, [isCardAdded, isCardDelete, isCardEdited]);\n\n\n  const getCardData = () => {\n    Axios\n    .get(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card.json`)\n    .then((response) => {\n        setCardData(response.data);\n    })\n    .catch((error) => console.log(error));\n};\n\n  \n  //  to Add and Edit cardData in DB\n  const handleAddCardData = (e) => {\n    //   check if all input is taken\n    if(cardNames.current.value.length === 0 || teamDetails.current.value.length === 0){\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios\n        .put(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card/${cardId}.json`,\n          {\n            cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n            team: team.length === 0 ? teamDetail : team,\n          }\n        )\n          .then((response) => {\n            alert(\"card edited succesfully\");\n            setIsCardEdited(true);\n          })\n          .catch((error) => console.log(\"Error in editDetails\" + error));\n      }\n      //  if user wants to add a new card\n      else {\n        Axios\n        .post(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card.json`,\n          {\n            cardTitle: cardTitle,\n            team: team,\n          }\n        )\n          .then((response) => {\n            alert(\"card added succesfully\");\n            setIsCardAdded(true);\n          })\n          .catch((error) => console.log(\"Error\" + error));\n      }\n\n      setShowModal(false);\n      setEditDetails(false);\n\n      setCardTitle(\"\");\n      setTeam([]);\n    }\n  };\n\n  // on click of card this function shows details\n  const onCardClick = (\n    cardName,\n    teamDetails,\n    cardId,\n    e\n  ) => {\n    setShowDetails(true);\n\n    setCardName(cardName);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  };\n\n   // handles edit button click\n   const handleEdit = (e) => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  };\n\n  // handles archive on card archive click\n  const handleArchive = (e) => {\n    Axios\n    .delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${groupId}/column/${scheduleDateId}/card/${cardId}.json`)\n      .then((response) => {\n        alert(\"card archived succesfully\");\n        setIsCardDelete(true);\n      })\n      .catch((error) => console.log(\"Error\" + error));\n\n    setShowDetails(false);\n  };\n\n//To display multiple team member selected\n  const onSelectChange = (e) => {\n    const values = [...e.target.selectedOptions].map((opt) => opt.value);\n    setTeam(values);\n  };\n\n\n  const  modalCloseHandler = () => { setShowModal(false);setEditDetails(false);};\n\n  const  showmodalCloseHandler = () => {setShowDetails(false)};\n\n  //modal of Add and Edit Card\n  let modalContent = showModal ? \n\n  (\n      <>\n\n    <div className=\"container py-4\">\n      <div className=\"row\">\n        <div className=\"col-md-12 text-left\">\n          <h3>{editDetails ? 'Edit Time Slot' : 'Add Time Slot'}</h3>\n          {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Time</p> : null}\n        <div className=\"form-group\">\n          <label htmlFor=\"timeslot\">Enter a Time slot for your Schedule date:</label>\n          <input type=\"text\" id=\"title\" defaultValue={editDetails ? cardName : \"\"} \n          placeholder=\"e.g. Add a new icon\" ref={cardNames} \n          onChange={(e) => setCardTitle(e.target.value)} className=\"form-control\"/>\n        </div> \n        <div className=\"form-group\">\n          <label htmlFor=\"teacherlist\">Choose Teaches Name for this time slot(select multiple,if needed):</label>\n          <select  id=\"teacherlist\" name=\"teacherlist\" class=\"form-control\" defaultValue={editDetails ? teamDetail : \"\"}\n          multiple ref={teamDetails} \n          onChange={onSelectChange}>{memberArr.map((item) => (<option value={item} key={item}>{item}</option>))}\n          </select>\n        </div> \n        <button disabled={formComplete} className=\"btn btn-info btn-sm\" \n        id=\"CreateCard\" onClick={handleAddCardData}>{editDetails ? 'Edit Time Slot' : 'Add Time Slot'}</button>\n        </div>\n      </div>\n    </div>\n      </>\n  )\n  :null;\n\n  //modal of show card details\n  let showmodalContent = showDetails ? \n\n  (\n      <>\n      <div className={style.ShowCardDetails}>\n        <div className={style.ShowcardHeader}>\n          <h2>{cardName}</h2>\n          <div className={style.editAndArcbtn}>\n            <button type=\"button\" id=\"editBtn\" className={style.EditButton} onClick={handleEdit}>Edit</button>\n            <button type=\"button\" id=\"archiveBtn\" className={style.ArchiveButton} onClick={handleArchive}>Archive</button>\n          </div>\n        </div>\n        <small>in {childAgeGroup}</small>\n        <div className=\"HorizontalLine\">\n            <hr className=\"hrline\"></hr>\n        </div>\n        <br/>\n        <h3>Members</h3>\n        <div>\n          {teamDetail !== undefined &&\n            teamDetail.map((i) => (\n              <span className={style.cardMembers} key={i}>{i.charAt(0)}</span>\n            ))}\n        </div>\n      </div>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n      <div className={style.CardData}>\n      {cardData ?\n        Object.entries(cardData).map((item) => (\n          <div  key={item[0]}>\n          <div className={style.CardInfo}      \n                id={item[0]}\n                value={item[1].cardTitle}\n                onClick={(e) =>\n                  onCardClick(\n                    item[1].cardTitle,\n                    item[1].team,\n                    item[0],\n                    e\n                  )\n                }\n                >\n          <div className={style.CardHeader}>\n          <div className={style.CardName}>{item[1].cardTitle}</div>\n          </div>\n          <div className={style.CardIcon}>\n          <div><i className=\"fas fa-list\"></i></div>\n          <div>\n                    {item[1].team !== undefined ? (\n                      item[1].team.map((i) => (\n                        <span className={style.cardMembers} key={i}>\n                          {i.charAt(0)}\n                        </span>\n                      ))\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n          </div>\n          </div>\n          </div>\n         ) ): <small className={style.NotaskAdd}>No Time Slots Added</small>}\n          <div className=\"text-right\">\n            <button className=\"btn btn-primary btn-sm\" onClick={() => setShowModal(true)} >Add Time Slot</button>\n          </div>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n       {showDetails && (\n        \n        <Modal  \n            content = {showmodalContent}\n            close = {showmodalCloseHandler}/> \n    )}\n\n    </div>\n)\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}