{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kido3/Desktop/Kido/kido-book-trial/src/components/Backend/card/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../../context/Auth';\n\nfunction Card(props) {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [showModal, setShowModal] = useState(false);\n  const {\n    teacherName,\n    scheduleDateId,\n    groupId,\n    childAgeGroup\n  } = props;\n  const [cardData, setCardData] = useState(\"\"); // to handle details of card\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\"); // const [descDetails, setDescDetails] = useState(\"\");\n  // const [dateDetails, setDateDetails] = useState(\"\");\n\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]); // const [descrptn, setDescrptn] = useState(\"\");\n  // const [dueDate, setDueDate] = useState(\"\");\n\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false); // to split members list string into array\n\n  const memberArr = teacherName.split(\",\");\n  const cardNames = React.useRef();\n  const teamDetails = React.useRef(); // const descrpDetails = React.useRef();\n  // const datesDetails = React.useRef();\n\n  const userId = currentUser.uid; // to Hide past date\n  // var today = new Date();\n  // var month,\n  //   day = null;\n  // if (today.getMonth() < 10 || today.getDate() < 10) {\n  //   month = \"0\" + (today.getMonth() + 1);\n  //   day = \"0\" + today.getDate();\n  // }\n  // var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n  useEffect(() => {\n    setIsCardAdded(false);\n    setIsCardDelete(false);\n    setIsCardEdited(false);\n    getCardData();\n  }, [isCardAdded, isCardDelete, isCardEdited]);\n\n  const getCardData = () => {\n    Axios.get(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card.json`).then(response => {\n      setCardData(response.data);\n    }).catch(error => console.log(error));\n  }; //  to Add and Edit cardData in DB\n\n\n  const handleAddCardData = e => {\n    //   check if all input is taken\n    if (cardNames.current.value.length === 0 || teamDetails.current.value.length === 0) {\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios.put(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card/${cardId}.json`, {\n          cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n          team: team.length === 0 ? teamDetail : team\n        }).then(response => {\n          alert(\"card edited succesfully\");\n          setIsCardEdited(true);\n        }).catch(error => console.log(\"Error in editDetails\" + error));\n      } //  if user wants to add a new card\n      else {\n          Axios.post(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card.json`, {\n            cardTitle: cardTitle,\n            team: team\n          }).then(response => {\n            alert(\"card added succesfully\");\n            setIsCardAdded(true);\n          }).catch(error => console.log(\"Error\" + error));\n        }\n\n      setShowModal(false);\n      setEditDetails(false);\n      setCardTitle(\"\");\n      setTeam([]);\n    }\n  }; // on click of card this function shows details\n\n\n  const onCardClick = (cardName, teamDetails, cardId, e) => {\n    setShowDetails(true);\n    setCardName(cardName);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  }; // handles edit button click\n\n\n  const handleEdit = e => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  }; // handles archive on card archive click\n\n\n  const handleArchive = e => {\n    Axios.delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${groupId}/column/${scheduleDateId}/card/${cardId}.json`).then(response => {\n      alert(\"card archived succesfully\");\n      setIsCardDelete(true);\n    }).catch(error => console.log(\"Error\" + error));\n    setShowDetails(false);\n  }; //To display multiple team member selected\n\n\n  const onSelectChange = e => {\n    const values = [...e.target.selectedOptions].map(opt => opt.value);\n    setTeam(values);\n  };\n\n  const modalCloseHandler = () => {\n    setShowModal(false);\n    setEditDetails(false);\n  };\n\n  const showmodalCloseHandler = () => {\n    setShowDetails(false);\n  }; //modal of Add and Edit Card\n\n\n  let modalContent = showModal ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [formIncompleteError ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Kindly complete the form before adding Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 30\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.AddCardForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editDetails ? 'Edit Card' : 'Add Card'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.FormInput,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.Lable,\n          children: \"Enter a title for your task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 106\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          defaultValue: editDetails ? cardName : \"\",\n          placeholder: \"e.g. Add a new icon\",\n          ref: cardNames,\n          onChange: e => setCardTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 115\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.FormInput,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.Lable,\n          children: \"Choose members for this task(select multiple,if needed):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"membersList\",\n          name: \"membersList\",\n          defaultValue: editDetails ? teamDetail : \"\",\n          multiple: true,\n          ref: teamDetails,\n          onChange: onSelectChange,\n          children: memberArr.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 303\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 134\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.FormInput,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.Lable,\n          children: \"Add the description for your task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"description\",\n          type: \"text\",\n          defaultValue: editDetails ? descDetails : \"\",\n          placeholder: \"Add your description here\",\n          ref: descrpDetails,\n          onChange: e => setDescrptn(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 112\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.FormInput,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.Lable,\n          children: \"Select the due-date for this task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"due_date\",\n          type: \"date\",\n          min: date,\n          defaultValue: editDetails ? dateDetails : \"\",\n          ref: datesDetails,\n          onChange: e => setDueDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 112\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.AddButton,\n      id: \"CreateCard\",\n      disabled: formComplete,\n      onClick: handleAddCardData,\n      children: editDetails ? 'Edit Card' : 'Add Card'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : null; //modal of show card details\n\n  let showmodalContent = showDetails ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.ShowCardDetails,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.ShowcardHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: cardName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.editAndArcbtn,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"editBtn\",\n            className: style.EditButton,\n            onClick: handleEdit,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"archiveBtn\",\n            className: style.ArchiveButton,\n            onClick: handleArchive,\n            children: \"Archive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"in \", childAgeGroup]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HorizontalLine\",\n        children: /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"hrline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: teamDetail !== undefined && teamDetail.map(i => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.cardMembers,\n          children: i.charAt(0)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.CardData,\n      children: [cardData ? Object.entries(cardData).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.CardInfo,\n          id: item[0],\n          value: item[1].cardTitle,\n          onClick: e => onCardClick(item[1].cardTitle, item[1].team, item[0], e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.CardHeader,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.CardName,\n              children: item[1].cardTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.CardIcon,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-list\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item[1].team !== undefined ? item[1].team.map(i => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: style.cardMembers,\n                children: i.charAt(0)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 25\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, item[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"small\", {\n        className: style.NotaskAdd,\n        children: \"No Time Slots Added\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.CardBtn,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.AddCardBtn,\n          onClick: () => setShowModal(true),\n          children: \"Add a card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      content: modalContent,\n      close: modalCloseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), showDetails && /*#__PURE__*/_jsxDEV(Modal, {\n      content: showmodalContent,\n      close: showmodalCloseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"yvxl0efZSs4tzD2qr6FDAL8BO2w=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/kido3/Desktop/Kido/kido-book-trial/src/components/Backend/card/Card.js"],"names":["React","useState","useEffect","useContext","style","Modal","Axios","AuthContext","Card","props","currentUser","showModal","setShowModal","teacherName","scheduleDateId","groupId","childAgeGroup","cardData","setCardData","showDetails","setShowDetails","cardName","setCardName","teamDetail","setTeamDetails","editDetails","setEditDetails","cardId","setCardId","isCardAdded","setIsCardAdded","isCardDelete","setIsCardDelete","isCardEdited","setIsCardEdited","cardTitle","setCardTitle","team","setTeam","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","memberArr","split","cardNames","useRef","teamDetails","userId","uid","getCardData","get","then","response","data","catch","error","console","log","handleAddCardData","e","current","value","length","put","alert","post","onCardClick","handleEdit","handleArchive","delete","onSelectChange","values","target","selectedOptions","map","opt","modalCloseHandler","showmodalCloseHandler","modalContent","color","AddCardForm","FormInput","Lable","item","descDetails","descrpDetails","setDescrptn","date","dateDetails","datesDetails","setDueDate","AddButton","showmodalContent","ShowCardDetails","ShowcardHeader","editAndArcbtn","EditButton","ArchiveButton","undefined","i","cardMembers","charAt","CardData","Object","entries","CardInfo","CardHeader","CardName","CardIcon","NotaskAdd","CardBtn","AddCardBtn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../../context/Auth';\n\nfunction Card(props) {\n  const { currentUser } = useContext(AuthContext);\n\n  const [showModal, setShowModal] = useState(false);\n  const { teacherName, scheduleDateId, groupId, childAgeGroup} = props;\n  const [cardData, setCardData] = useState(\"\");\n\n  // to handle details of card\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  // const [descDetails, setDescDetails] = useState(\"\");\n  // const [dateDetails, setDateDetails] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n  // const [descrptn, setDescrptn] = useState(\"\");\n  // const [dueDate, setDueDate] = useState(\"\");\n\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  // to split members list string into array\n  const memberArr = teacherName.split(\",\");\n\n  const cardNames = React.useRef();\n  const teamDetails = React.useRef();\n  // const descrpDetails = React.useRef();\n  // const datesDetails = React.useRef();\n\n  const userId = currentUser.uid;\n\n    // to Hide past date\n    // var today = new Date();\n    // var month,\n    //   day = null;\n    // if (today.getMonth() < 10 || today.getDate() < 10) {\n    //   month = \"0\" + (today.getMonth() + 1);\n    //   day = \"0\" + today.getDate();\n    // }\n    // var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n    useEffect(() => {\n      setIsCardAdded(false);\n      setIsCardDelete(false);\n      setIsCardEdited(false);\n      getCardData();\n    }, [isCardAdded, isCardDelete, isCardEdited]);\n\n\n  const getCardData = () => {\n    Axios\n    .get(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card.json`)\n    .then((response) => {\n        setCardData(response.data);\n    })\n    .catch((error) => console.log(error));\n};\n\n  \n  //  to Add and Edit cardData in DB\n  const handleAddCardData = (e) => {\n    //   check if all input is taken\n    if(cardNames.current.value.length === 0 || teamDetails.current.value.length === 0){\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios\n        .put(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card/${cardId}.json`,\n          {\n            cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n            team: team.length === 0 ? teamDetail : team,\n          }\n        )\n          .then((response) => {\n            alert(\"card edited succesfully\");\n            setIsCardEdited(true);\n          })\n          .catch((error) => console.log(\"Error in editDetails\" + error));\n      }\n      //  if user wants to add a new card\n      else {\n        Axios\n        .post(`https://kido-bookt-backend-default-rtdb.firebaseio.com/groupContents/${groupId}/column/${scheduleDateId}/card.json`,\n          {\n            cardTitle: cardTitle,\n            team: team,\n          }\n        )\n          .then((response) => {\n            alert(\"card added succesfully\");\n            setIsCardAdded(true);\n          })\n          .catch((error) => console.log(\"Error\" + error));\n      }\n\n      setShowModal(false);\n      setEditDetails(false);\n\n      setCardTitle(\"\");\n      setTeam([]);\n    }\n  };\n\n  // on click of card this function shows details\n  const onCardClick = (\n    cardName,\n    teamDetails,\n    cardId,\n    e\n  ) => {\n    setShowDetails(true);\n\n    setCardName(cardName);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  };\n\n   // handles edit button click\n   const handleEdit = (e) => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  };\n\n  // handles archive on card archive click\n  const handleArchive = (e) => {\n    Axios\n    .delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${groupId}/column/${scheduleDateId}/card/${cardId}.json`)\n      .then((response) => {\n        alert(\"card archived succesfully\");\n        setIsCardDelete(true);\n      })\n      .catch((error) => console.log(\"Error\" + error));\n\n    setShowDetails(false);\n  };\n\n//To display multiple team member selected\n  const onSelectChange = (e) => {\n    const values = [...e.target.selectedOptions].map((opt) => opt.value);\n    setTeam(values);\n  };\n\n\n  const  modalCloseHandler = () => { setShowModal(false);setEditDetails(false);};\n\n  const  showmodalCloseHandler = () => {setShowDetails(false)};\n\n  //modal of Add and Edit Card\n  let modalContent = showModal ? \n\n  (\n      <>\n      {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Card</p> : null}\n      <div className={style.AddCardForm}>\n        <h2>{editDetails ? 'Edit Card' : 'Add Card'}</h2>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a title for your task:</span><br></br><input type=\"text\" id=\"title\" defaultValue={editDetails ? cardName : \"\"} placeholder=\"e.g. Add a new icon\" ref={cardNames} onChange={(e) => setCardTitle(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Choose members for this task(select multiple,if needed):</span><select  id=\"membersList\" name=\"membersList\" defaultValue={editDetails ? teamDetail : \"\"} multiple ref={teamDetails} onChange={onSelectChange}>{memberArr.map((item) => (<option value={item} key={item}>{item}</option>))}</select></div>\n       <div className={style.FormInput}><span className={style.Lable}>Add the description for your task:</span><input id=\"description\" type=\"text\"  defaultValue={editDetails ? descDetails : \"\"} placeholder=\"Add your description here\" ref={descrpDetails}  onChange={(e) => setDescrptn(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Select the due-date for this task:</span><input id=\"due_date\" type=\"date\" min={date} defaultValue={editDetails ? dateDetails : \"\"} ref={datesDetails} onChange={(e) => setDueDate(e.target.value)}/></div>\n      </div>\n      <button className={style.AddButton} id=\"CreateCard\" disabled={formComplete} onClick={handleAddCardData}>{editDetails ? 'Edit Card' : 'Add Card'}</button>\n      </>\n  )\n  :null;\n\n  //modal of show card details\n  let showmodalContent = showDetails ? \n\n  (\n      <>\n      <div className={style.ShowCardDetails}>\n        <div className={style.ShowcardHeader}>\n          <h2>{cardName}</h2>\n          <div className={style.editAndArcbtn}>\n            <button type=\"button\" id=\"editBtn\" className={style.EditButton} onClick={handleEdit}>Edit</button>\n            <button type=\"button\" id=\"archiveBtn\" className={style.ArchiveButton} onClick={handleArchive}>Archive</button>\n          </div>\n        </div>\n        <small>in {childAgeGroup}</small>\n        <div className=\"HorizontalLine\">\n            <hr className=\"hrline\"></hr>\n        </div>\n        <br/>\n        <h3>Members</h3>\n        <div>\n          {teamDetail !== undefined &&\n            teamDetail.map((i) => (\n              <span className={style.cardMembers} key={i}>{i.charAt(0)}</span>\n            ))}\n        </div>\n      </div>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n      <div className={style.CardData}>\n      {cardData ?\n        Object.entries(cardData).map((item) => (\n          <div  key={item[0]}>\n          <div className={style.CardInfo}      \n                id={item[0]}\n                value={item[1].cardTitle}\n                onClick={(e) =>\n                  onCardClick(\n                    item[1].cardTitle,\n                    item[1].team,\n                    item[0],\n                    e\n                  )\n                }\n                >\n          <div className={style.CardHeader}>\n          <div className={style.CardName}>{item[1].cardTitle}</div>\n          </div>\n          <div className={style.CardIcon}>\n          <div><i className=\"fas fa-list\"></i></div>\n          <div>\n                    {item[1].team !== undefined ? (\n                      item[1].team.map((i) => (\n                        <span className={style.cardMembers} key={i}>\n                          {i.charAt(0)}\n                        </span>\n                      ))\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n          </div>\n          </div>\n          </div>\n         ) ): <small className={style.NotaskAdd}>No Time Slots Added</small>}\n          <div className={style.CardBtn}>\n            <button className={style.AddCardBtn} onClick={() => setShowModal(true)} >Add a card</button>\n          </div>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n       {showDetails && (\n        \n        <Modal  \n            content = {showmodalContent}\n            close = {showmodalCloseHandler}/> \n    )}\n\n    </div>\n)\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}