{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kido3/Desktop/Kido/kido-book-trial/src/pages/Backend/AllGroups/AllGroups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport style from './AllBoards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../../common/Loader/Loader\";\nimport { AuthContext } from '../../../context/Auth';\nimport Sidebar from \"../../../components/Backend/Sidebar/Sidebar\";\nexport const AllBoards = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [boardContents, setBoardContents] = useState({});\n  const [showBoard, setShowBoard] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const userId = currentUser.uid;\n  document.title = \"Pro Organizer\";\n  useEffect(() => {\n    getBoardContents();\n  }, [showBoard]);\n\n  const getBoardContents = () => {\n    Axios.get(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents.json`).then(response => {\n      setTimeout(setBoardContents(response.data), 50000);\n      setLoading(false);\n\n      if (boardContents !== null) {\n        setShowBoard(true);\n      } else setShowBoard(false);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper d-flex align-items-stretch\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.BoardContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.BoardsTitle,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Boards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), showBoard ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.BoardsData,\n            children: boardContents && Object.entries(boardContents).map(item => /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/board/\" + item[1].boardName,\n                state: {\n                  type: item[1].boardType,\n                  members: item[1].members,\n                  boardId: item[0]\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.BoardItem,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: style.BoardName,\n                  children: item[1].boardName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 29\n                }, this)\n              }, item[1].boardName, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You haven't created any Group. Kindly click on the 'Create a Group' button in the Sidebar bar to create a Group.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllBoards, \"X/NHLBoUPSssMg8EqJaVrfeQAgo=\");\n\n_c = AllBoards;\nexport default AllBoards;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBoards\");","map":{"version":3,"sources":["/home/kido3/Desktop/Kido/kido-book-trial/src/pages/Backend/AllGroups/AllGroups.js"],"names":["React","useState","useEffect","useContext","style","Axios","Link","Loader","AuthContext","Sidebar","AllBoards","currentUser","boardContents","setBoardContents","showBoard","setShowBoard","loading","setLoading","userId","uid","document","title","getBoardContents","get","then","response","setTimeout","data","catch","error","console","log","BoardContainer","BoardsTitle","BoardsData","Object","entries","map","item","pathname","boardName","state","type","boardType","members","boardId","BoardItem","BoardName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport style from  './AllBoards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../../common/Loader/Loader\";\nimport { AuthContext } from '../../../context/Auth';\nimport Sidebar from \"../../../components/Backend/Sidebar/Sidebar\";\n\nexport const AllBoards = () => {\n\n    const { currentUser } = useContext(AuthContext);\n\n    const [boardContents, setBoardContents] = useState({});\n    const [showBoard, setShowBoard] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    const userId = currentUser.uid;\n\n    document.title = \"Pro Organizer\";\n\n    useEffect(() => {\n        getBoardContents();\n    }, [showBoard]);\n  \n    const getBoardContents = () => {\n        Axios\n        .get(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents.json`)\n        .then((response) => {\n          setTimeout(setBoardContents(response.data), 50000);\n          setLoading(false);\n          if (boardContents !== null) {\n            setShowBoard(true);\n          } else setShowBoard(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n            <>\n               <div className=\"wrapper d-flex align-items-stretch\">\n              <Sidebar />\n              <div className={style.BoardContainer}>\n                <div className={style.BoardsTitle}>\n                    <span>Boards</span>\n                </div>\n                <br />\n                {showBoard ? (\n                  <div className={style.BoardsData}>\n                    {boardContents &&\n                      Object.entries(boardContents).map((item) => (\n                        <Link\n                          to={{\n                            pathname: \"/board/\" + item[1].boardName,\n                            state: {\n                              type: item[1].boardType,\n                              members: item[1].members,\n                              boardId: item[0],\n                            },\n                          }}\n                        >\n                          <div className={style.BoardItem} key={item[1].boardName}>\n                            <span className={style.BoardName}>\n                               {item[1].boardName}\n                            </span>\n                          </div>\n                        </Link>\n                      ))}\n                  </div>\n                ) : (\n                  <p>\n                    You haven't created any Group. Kindly click on the 'Create\n                    a Group' button in the Sidebar bar to create a Group.\n                  </p>\n                )}\n              </div>\n              </div>\n            </>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default AllBoards;\n"]},"metadata":{},"sourceType":"module"}